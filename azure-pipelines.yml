# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-2019'

variables:
  buildConfiguration: 'Release'
  version: '0.0.1'

steps:
- script: dotnet build --configuration $(buildConfiguration) --output "D:\a\1\a"
  displayName: 'dotnet build $(buildConfiguration)'

# do this after other tasks such as building
- task: DotNetCoreCLI@2
  displayName: 'run MSTest'
  inputs:
    command: test
    projects: '**/tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'collect Code Coverage'
  inputs:
    command: test
    projects: '**/tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
#- task: PublishBuildArtifacts@1
#  displayName: 'publish artefacts to Azure Pipelines'
#  inputs:
#    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
#    artifactName: 'pipelines-dotnet.core'
    
# do this near the end of your pipeline in most cases
- script: dotnet pack /p:PackageVersion=$(version)  # define version variable elsewhere in your pipeline
- task: NuGetAuthenticate@0
  input:
    nuGetServiceConnections: 'pipelines-dotnet-core'
- task: NuGetCommand@2
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: 'pipelines-dotnet-core'
    versioningScheme: byEnvVar
    versionEnvVar: version
